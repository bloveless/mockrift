version: 0.2

env:
  parameter-store:
    COREOS_KUBERNETES_CA: "/COREOS_KUBERNETES/CA"
    COREOS_KUBERNETES_UTIL_SA_TOKEN: "/COREOS_KUBERNETES/UTIL_SA_TOKEN"

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - export ORIG_DIR=$(pwd)
      - cd /tmp
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - cd $ORIG_DIR
      - echo "69.169.138.37 coreos-master" >> /etc/hosts
      - echo $COREOS_KUBERNETES_CA > /tmp/coreos_kubernetes_ca.crt
  pre_build:
    commands:
      - kubectl config set-cluster coreos-master --server=https://coreos-master:6443
      - kubectl config set-cluster coreos-master --certificate-authority=/tmp/coreos_kubernetes_ca.crt
      - kubectl config set-cluster coreos-master --insecure-skip-tls-verify=true
      - kubectl config set-credentials util-sa --token $COREOS_KUBERNETES_UTIL_SA_TOKEN
      - kubectl config set-context coreos-master --cluster=coreos-master --user=util-sa
      - kubectl config use-context coreos-master
      - kubectl version
      - $(aws ecr get-login --no-include-email --region us-west-2)
  build:
    commands:
      - export BUILD_TIME=$(date +%s%3N)
      - docker build . -t 391324319136.dkr.ecr.us-west-2.amazonaws.com/todone-server:$BUILD_TIME -f deploy/docker/server/Dockerfile
      - docker push 391324319136.dkr.ecr.us-west-2.amazonaws.com/todone-server:$BUILD_TIME
  post_build:
    commands:
      - kubectl -n todone set image statefulset/todone-server server=391324319136.dkr.ecr.us-west-2.amazonaws.com/todone-server:$BUILD_TIME
